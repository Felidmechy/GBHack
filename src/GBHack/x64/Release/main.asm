; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_05FPMBMOMC@test?6?$AA@			; `string'
PUBLIC	??_C@_06PIGNLFBG@x?3?5?$CFf?6?$AA@		; `string'
PUBLIC	??_C@_06FOBKLOKC@y?3?5?$CFf?6?$AA@		; `string'
PUBLIC	??_C@_06GPPCKEDP@z?3?5?$CFf?6?$AA@		; `string'
PUBLIC	??_C@_0M@NJMGJJCN@col?3?5?$CF016X?6?$AA@	; `string'
PUBLIC	??_C@_0BA@OEACMIEE@Noclip?5Disabled?$AA@	; `string'
PUBLIC	??_C@_0P@LAHOHAGA@Noclip?5Enabled?$AA@		; `string'
PUBLIC	??_C@_0BJ@OHKGLMMD@Infinite?5Health?5Disabled?$AA@ ; `string'
PUBLIC	??_C@_0BI@KCOIPLOC@Infinite?5Health?5Enabled?$AA@ ; `string'
PUBLIC	??_C@_0BH@MEFAJJBM@Infinite?5Ammo?5Disabled?$AA@ ; `string'
PUBLIC	??_C@_0BG@INKKJLBF@Infinite?5Ammo?5Enabled?$AA@	; `string'
PUBLIC	??_C@_06PFDLEJLJ@Output?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_06GDENEHCP@CONIN$?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_07GPDNMNG@CONOUT$?$AA@			; `string'
PUBLIC	?DisplayText@@3P6AHHPEBD@ZEA			; DisplayText
PUBLIC	?g_pGameView@@3PEAVCGameView@@EA		; g_pGameView
PUBLIC	?CopyVectorTramp@@3P6AXPEAUVector@@0@ZEA	; CopyVectorTramp
PUBLIC	?g_bNoclipEnabled@@3_NA				; g_bNoclipEnabled
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?g_cGameBase@@3PEADEA				; g_cGameBase
PUBLIC	?g_pLocalPlayer@@3PEAPEAHEA			; g_pLocalPlayer
PUBLIC	?g_bInfiniteHealthEnabled@@3_NA			; g_bInfiniteHealthEnabled
PUBLIC	?g_bInfiniteAmmoEnabled@@3_NA			; g_bInfiniteAmmoEnabled
PUBLIC	?SetActorPosition@@3P6AHPEAHPEAUVector@@0@ZEA	; SetActorPosition
EXTRN	__imp_freopen_s:PROC
EXTRN	__imp_AllocConsole:PROC
EXTRN	__imp_GetModuleHandleW:PROC
EXTRN	__imp_GetAsyncKeyState:PROC
EXTRN	__imp_FreeConsole:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__imp_FreeLibraryAndExitThread:PROC
EXTRN	__imp_fclose:PROC
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp_SetConsoleTitleA:PROC
?DisplayText@@3P6AHHPEBD@ZEA DQ 01H DUP (?)		; DisplayText
?g_pGameView@@3PEAVCGameView@@EA DQ 01H DUP (?)		; g_pGameView
?CopyVectorTramp@@3P6AXPEAUVector@@0@ZEA DQ 01H DUP (?)	; CopyVectorTramp
?g_bNoclipEnabled@@3_NA DB 01H DUP (?)			; g_bNoclipEnabled
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
	ALIGN	8

?g_cGameBase@@3PEADEA DQ 01H DUP (?)			; g_cGameBase
?g_pLocalPlayer@@3PEAPEAHEA DQ 01H DUP (?)		; g_pLocalPlayer
?g_bInfiniteHealthEnabled@@3_NA DB 01H DUP (?)		; g_bInfiniteHealthEnabled
	ALIGN	4

?g_bInfiniteAmmoEnabled@@3_NA DB 01H DUP (?)		; g_bInfiniteAmmoEnabled
	ALIGN	8

?SetActorPosition@@3P6AHPEAHPEAUVector@@0@ZEA DQ 01H DUP (?) ; SetActorPosition
_BSS	ENDS
;	COMDAT ??_C@_07GPDNMNG@CONOUT$?$AA@
CONST	SEGMENT
??_C@_07GPDNMNG@CONOUT$?$AA@ DB 'CONOUT$', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06GDENEHCP@CONIN$?$AA@
CONST	SEGMENT
??_C@_06GDENEHCP@CONIN$?$AA@ DB 'CONIN$', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06PFDLEJLJ@Output?$AA@
CONST	SEGMENT
??_C@_06PFDLEJLJ@Output?$AA@ DB 'Output', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@INKKJLBF@Infinite?5Ammo?5Enabled?$AA@
CONST	SEGMENT
??_C@_0BG@INKKJLBF@Infinite?5Ammo?5Enabled?$AA@ DB 'Infinite Ammo Enabled'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MEFAJJBM@Infinite?5Ammo?5Disabled?$AA@
CONST	SEGMENT
??_C@_0BH@MEFAJJBM@Infinite?5Ammo?5Disabled?$AA@ DB 'Infinite Ammo Disabl'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KCOIPLOC@Infinite?5Health?5Enabled?$AA@
CONST	SEGMENT
??_C@_0BI@KCOIPLOC@Infinite?5Health?5Enabled?$AA@ DB 'Infinite Health Ena'
	DB	'bled', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OHKGLMMD@Infinite?5Health?5Disabled?$AA@
CONST	SEGMENT
??_C@_0BJ@OHKGLMMD@Infinite?5Health?5Disabled?$AA@ DB 'Infinite Health Di'
	DB	'sabled', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LAHOHAGA@Noclip?5Enabled?$AA@
CONST	SEGMENT
??_C@_0P@LAHOHAGA@Noclip?5Enabled?$AA@ DB 'Noclip Enabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OEACMIEE@Noclip?5Disabled?$AA@
CONST	SEGMENT
??_C@_0BA@OEACMIEE@Noclip?5Disabled?$AA@ DB 'Noclip Disabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NJMGJJCN@col?3?5?$CF016X?6?$AA@
CONST	SEGMENT
??_C@_0M@NJMGJJCN@col?3?5?$CF016X?6?$AA@ DB 'col: %016X', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPPCKEDP@z?3?5?$CFf?6?$AA@
CONST	SEGMENT
??_C@_06GPPCKEDP@z?3?5?$CFf?6?$AA@ DB 'z: %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FOBKLOKC@y?3?5?$CFf?6?$AA@
CONST	SEGMENT
??_C@_06FOBKLOKC@y?3?5?$CFf?6?$AA@ DB 'y: %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PIGNLFBG@x?3?5?$CFf?6?$AA@
CONST	SEGMENT
??_C@_06PIGNLFBG@x?3?5?$CFf?6?$AA@ DB 'x: %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05FPMBMOMC@test?6?$AA@
CONST	SEGMENT
??_C@_05FPMBMOMC@test?6?$AA@ DB 'test', 0aH, 00H	; `string'
CONST	ENDS
PUBLIC	??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
PUBLIC	?RunHackLoop@@YAXXZ				; RunHackLoop
PUBLIC	?ToggleInfiniteAmmo@@YAXXZ			; ToggleInfiniteAmmo
PUBLIC	?ToggleInfiniteHealth@@YAXXZ			; ToggleInfiniteHealth
PUBLIC	?ToggleNoclip@@YAXXZ				; ToggleNoclip
PUBLIC	?HandleNoclip@@YAXXZ				; HandleNoclip
PUBLIC	?HandleToggleButtons@@YAXXZ			; HandleToggleButtons
PUBLIC	?FetchPlayerCollider@@YAXXZ			; FetchPlayerCollider
PUBLIC	?CopyVectorHook@@YAXPEAUVector@@0@Z		; CopyVectorHook
PUBLIC	?SetupHooks@@YAXXZ				; SetupHooks
PUBLIC	printf
PUBLIC	_vfprintf_l
PUBLIC	__local_stdio_printf_options
PUBLIC	?DLLAttach@@YAKPEAUHINSTANCE__@@@Z		; DLLAttach
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RunHackLoop@@YAXXZ DD imagerel $LN20
	DD	imagerel $LN20+234
	DD	imagerel $unwind$?RunHackLoop@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?HandleNoclip@@YAXXZ DD imagerel $LN8
	DD	imagerel $LN8+342
	DD	imagerel $unwind$?HandleNoclip@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?HandleToggleButtons@@YAXXZ DD imagerel $LN22@HandleTogg
	DD	imagerel $LN22@HandleTogg+218
	DD	imagerel $unwind$?HandleToggleButtons@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FetchPlayerCollider@@YAXXZ DD imagerel $LN5@FetchPlaye
	DD	imagerel $LN5@FetchPlaye+135
	DD	imagerel $unwind$?FetchPlayerCollider@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetupHooks@@YAXXZ DD imagerel $LN35@SetupHooks
	DD	imagerel $LN35@SetupHooks+137
	DD	imagerel $unwind$?SetupHooks@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN8@printf
	DD	imagerel $LN8@printf+85
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN4@vfprintf_l
	DD	imagerel $LN4@vfprintf_l+68
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DLLAttach@@YAKPEAUHINSTANCE__@@@Z DD imagerel $LN25@DLLAttach
	DD	imagerel $LN25@DLLAttach+362
	DD	imagerel $unwind$?DLLAttach@@YAKPEAUHINSTANCE__@@@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DLLAttach@@YAKPEAUHINSTANCE__@@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 041b01H
	DD	07017521bH
	DD	030156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetupHooks@@YAXXZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FetchPlayerCollider@@YAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?HandleToggleButtons@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?HandleNoclip@@YAXXZ DD 0a2e19H
	DD	04981fH
	DD	058819H
	DD	067813H
	DD	07680eH
	DD	03002f209H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RunHackLoop@@YAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File d:\repositories\github\gbhack\src\gbhack\main.cpp
; File d:\repositories\github\gbhack\src\gbhack\maths.cpp
; File d:\repositories\github\gbhack\src\gbhack\main.cpp
; File d:\repositories\github\gbhack\src\gbhack\maths.cpp
; File d:\repositories\github\gbhack\src\gbhack\main.cpp
; File d:\repositories\github\gbhack\src\gbhack\maths.cpp
; File d:\repositories\github\gbhack\src\gbhack\main.cpp
; File d:\repositories\github\gbhack\src\gbhack\maths.cpp
; File d:\repositories\github\gbhack\src\gbhack\main.cpp
;	COMDAT ?HandleNoclip@@YAXXZ
_TEXT	SEGMENT
aimdir$ = 32
__$ArrayPad$ = 48
?HandleNoclip@@YAXXZ PROC				; HandleNoclip, COMDAT

; 66   : {

$LN8:
	push	rbx
	sub	rsp, 128				; 00000080H
	movaps	XMMWORD PTR [rsp+112], xmm6
	movaps	XMMWORD PTR [rsp+96], xmm7
	movaps	XMMWORD PTR [rsp+80], xmm8
	movaps	XMMWORD PTR [rsp+64], xmm9
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 67   :     Vector* pPlayerPosition = (Vector*)((*(char**)g_pLocalPlayer) + 0x54);

	mov	rax, QWORD PTR ?g_pLocalPlayer@@3PEAPEAHEA ; g_pLocalPlayer
	mov	rbx, QWORD PTR [rax]

; 68   :     //Vector vecorigin;
; 69   :     //vecorigin.x = 0;
; 70   :     //vecorigin.y = 0;
; 71   :     //vecorigin.z = 0;
; 72   :     Vector aimdir = Rad2Vec(g_pGameView->angle1, g_pGameView->angle2);

	mov	rax, QWORD PTR ?g_pGameView@@3PEAVCGameView@@EA ; g_pGameView
	movss	xmm8, DWORD PTR [rax+20]
	movss	xmm7, DWORD PTR [rax+24]
; File d:\repositories\github\gbhack\src\gbhack\maths.cpp

; 15   : 	cp = cosf(pitch);

	movaps	xmm0, xmm8
	call	cosf
	movaps	xmm6, xmm0

; 16   : 	cy = cosf(yaw);

	movaps	xmm0, xmm7
	call	cosf
	movaps	xmm9, xmm0
	movaps	xmm0, xmm7

; 17   : 
; 18   : 	vec.x = cp * cy;

	mulss	xmm9, xmm6
	call	sinf
	movaps	xmm7, xmm0
	movaps	xmm0, xmm8

; 19   : 	vec.y = cp * sy;

	mulss	xmm7, xmm6
	call	sinf
	movaps	xmm6, xmm0

; 27   : 	float radius = sqrtf(vec.x * vec.x + vec.y * vec.y + vec.z * vec.z);

	movaps	xmm1, xmm9

; 20   : 	vec.z = -sp;

	xorps	xmm6, DWORD PTR __xmm@80000000800000008000000080000000

; 27   : 	float radius = sqrtf(vec.x * vec.x + vec.y * vec.y + vec.z * vec.z);

	movaps	xmm0, xmm7
	mulss	xmm0, xmm7
	movaps	xmm2, xmm6
	mulss	xmm1, xmm9
	mulss	xmm2, xmm6
	addss	xmm0, xmm1
	addss	xmm0, xmm2
	call	sqrtf

; 30   : 	float iradius = 1.f / (radius + FL_EPSILON);

	addss	xmm0, DWORD PTR __real@34000000
	movss	xmm1, DWORD PTR __real@3f800000
; File d:\repositories\github\gbhack\src\gbhack\main.cpp

; 77   :     SetActorPosition(*g_pLocalPlayer, &aimdir, nullptr);

	lea	rdx, QWORD PTR aimdir$[rsp]
	xor	r8d, r8d
	mov	rcx, rbx
; File d:\repositories\github\gbhack\src\gbhack\maths.cpp

; 30   : 	float iradius = 1.f / (radius + FL_EPSILON);

	divss	xmm1, xmm0
; File d:\repositories\github\gbhack\src\gbhack\main.cpp

; 74   :     aimdir.x = pPlayerPosition->x + (aimdir.x * 0.01f);

	movss	xmm0, DWORD PTR __real@3c23d70a
; File d:\repositories\github\gbhack\src\gbhack\maths.cpp

; 32   : 	vec.x *= iradius;

	mulss	xmm9, xmm1

; 33   : 	vec.y *= iradius;

	mulss	xmm7, xmm1
	movss	DWORD PTR aimdir$[rsp], xmm9

; 34   : 	vec.z *= iradius;

	mulss	xmm6, xmm1
	movss	DWORD PTR aimdir$[rsp+4], xmm7
; File d:\repositories\github\gbhack\src\gbhack\main.cpp

; 74   :     aimdir.x = pPlayerPosition->x + (aimdir.x * 0.01f);

	mulss	xmm9, xmm0
; File d:\repositories\github\gbhack\src\gbhack\maths.cpp

; 34   : 	vec.z *= iradius;

	movss	DWORD PTR aimdir$[rsp+8], xmm6
; File d:\repositories\github\gbhack\src\gbhack\main.cpp

; 75   :     aimdir.y = pPlayerPosition->y + (aimdir.y * 0.01f);

	mulss	xmm7, xmm0
	addss	xmm9, DWORD PTR [rbx+84]

; 76   :     aimdir.z = pPlayerPosition->z + (aimdir.z * 0.01f);

	mulss	xmm6, xmm0
	movss	DWORD PTR aimdir$[rsp], xmm9
	addss	xmm7, DWORD PTR [rbx+88]
	movss	DWORD PTR aimdir$[rsp+4], xmm7
	addss	xmm6, DWORD PTR [rbx+92]
	movss	DWORD PTR aimdir$[rsp+8], xmm6

; 77   :     SetActorPosition(*g_pLocalPlayer, &aimdir, nullptr);

	call	QWORD PTR ?SetActorPosition@@3P6AHPEAHPEAUVector@@0@ZEA ; SetActorPosition

; 78   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rsp+112]
	movaps	xmm7, XMMWORD PTR [rsp+96]
	movaps	xmm8, XMMWORD PTR [rsp+80]
	movaps	xmm9, XMMWORD PTR [rsp+64]
	add	rsp, 128				; 00000080H
	pop	rbx
	ret	0
?HandleNoclip@@YAXXZ ENDP				; HandleNoclip
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\repositories\github\gbhack\src\gbhack\main.cpp
;	COMDAT ?RunHackLoop@@YAXXZ
_TEXT	SEGMENT
?RunHackLoop@@YAXXZ PROC				; RunHackLoop, COMDAT

; 124  : {

$LN20:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	xor	edi, edi
	npad	4
$LL2@RunHackLoo:

; 125  :     while (true)
; 126  :     {
; 127  :         if (*g_pLocalPlayer)

	mov	rax, QWORD PTR ?g_pLocalPlayer@@3PEAPEAHEA ; g_pLocalPlayer
	mov	rbx, QWORD PTR [rax]
	test	rbx, rbx
	je	$LN7@RunHackLoo
	movss	xmm1, DWORD PTR [rbx+46824]

; 43   :     printf("x: %f\n", pPos->x);

	lea	rcx, OFFSET FLAT:??_C@_06PIGNLFBG@x?3?5?$CFf?6?$AA@
	cvtps2pd xmm1, xmm1
	movq	rdx, xmm1
	call	printf
	movss	xmm1, DWORD PTR [rbx+46828]

; 44   :     printf("y: %f\n", pPos->y);

	lea	rcx, OFFSET FLAT:??_C@_06FOBKLOKC@y?3?5?$CFf?6?$AA@
	cvtps2pd xmm1, xmm1
	movq	rdx, xmm1
	call	printf
	movss	xmm1, DWORD PTR [rbx+46832]

; 45   :     printf("z: %f\n", pPos->z);

	lea	rcx, OFFSET FLAT:??_C@_06GPPCKEDP@z?3?5?$CFf?6?$AA@
	cvtps2pd xmm1, xmm1
	movq	rdx, xmm1
	call	printf

; 46   :     printf("col: %016X\n", *(uintptr_t*)pCollider);

	mov	rdx, QWORD PTR [rbx+46680]
	lea	rcx, OFFSET FLAT:??_C@_0M@NJMGJJCN@col?3?5?$CF016X?6?$AA@
	call	printf

; 128  :         {
; 129  : 
; 130  :             FetchPlayerCollider();
; 131  : 
; 132  :             HandleToggleButtons();

	call	?HandleToggleButtons@@YAXXZ		; HandleToggleButtons

; 133  : 
; 134  :             if (g_bNoclipEnabled)

	cmp	BYTE PTR ?g_bNoclipEnabled@@3_NA, dil	; g_bNoclipEnabled
	je	SHORT $LN5@RunHackLoo

; 135  :             {
; 136  :                 HandleNoclip();

	call	?HandleNoclip@@YAXXZ			; HandleNoclip
$LN5@RunHackLoo:

; 137  :             }
; 138  : 
; 139  :             if (g_bInfiniteHealthEnabled)

	cmp	BYTE PTR ?g_bInfiniteHealthEnabled@@3_NA, dil ; g_bInfiniteHealthEnabled
	mov	rcx, QWORD PTR ?g_pLocalPlayer@@3PEAPEAHEA ; g_pLocalPlayer
	je	SHORT $LN6@RunHackLoo

; 140  :             {
; 141  :                 char* flHealthAddress = ((*(char**)g_pLocalPlayer) + 0xb860);
; 142  :                 float flNewHealth = 1000.0f;
; 143  :                 memcpy(flHealthAddress, &flNewHealth, sizeof(flNewHealth));

	mov	rax, QWORD PTR [rcx]
	mov	DWORD PTR [rax+47200], 1148846080	; 447a0000H
$LN6@RunHackLoo:

; 144  :             }
; 145  :             if (g_bInfiniteAmmoEnabled)

	cmp	BYTE PTR ?g_bInfiniteAmmoEnabled@@3_NA, dil ; g_bInfiniteAmmoEnabled
	je	SHORT $LN7@RunHackLoo

; 146  :             {
; 147  :                 char* flAmmoAddress = ((*(char**)g_pLocalPlayer) + 0x24e28);
; 148  :                 float flNewAmmo = 0.0f;
; 149  :                 memcpy(flAmmoAddress, &flNewAmmo, sizeof(flNewAmmo));

	mov	rax, QWORD PTR [rcx]
	mov	DWORD PTR [rax+151080], edi
$LN7@RunHackLoo:

; 150  :             }
; 151  :         }
; 152  :         if (GetAsyncKeyState(VK_NUMPAD0) & 1)

	mov	ecx, 96					; 00000060H
	call	QWORD PTR __imp_GetAsyncKeyState
	test	al, 1
	je	$LL2@RunHackLoo

; 153  :         {
; 154  :             break; //uninject the dll
; 155  :         }
; 156  :     }
; 157  :     return;
; 158  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?RunHackLoop@@YAXXZ ENDP				; RunHackLoop
_TEXT	ENDS
END
